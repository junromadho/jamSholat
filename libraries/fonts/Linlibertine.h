

/*
 *
 * LinLibertine
 *
 * created with FontCreator
 * written by F. Maximilian Thiele
 *
 * http://www.apetech.de/fontCreator
 * me@apetech.de
 *
 * File Name           : Linlibertine.h
 * Date                : 21.02.2019
 * Font size in bytes  : 4748
 * Font width          : 10
 * Font height         : 23
 * Font first char     : 32
 * Font last char      : 59
 * Font used chars     : 27
 *
 * The font data are defined as
 *
 * struct _FONT_ {
 *     uint16_t   font_Size_in_Bytes_over_all_included_Size_it_self;
 *     uint8_t    font_Width_in_Pixel_for_fixed_drawing;
 *     uint8_t    font_Height_in_Pixel_for_all_characters;
 *     unit8_t    font_First_Char;
 *     uint8_t    font_Char_Count;
 *
 *     uint8_t    font_Char_Widths[font_Last_Char - font_First_Char +1];
 *                  // for each character the separate width in pixels,
 *                  // characters < 128 have an implicit virtual right empty row
 *
 *     uint8_t    font_data[];
 *                  // bit field of all characters
 */

#include <inttypes.h>
#include <avr/pgmspace.h>

#ifndef LINLIBERTINE_H
#define LINLIBERTINE_H

#define LINLIBERTINE_WIDTH 10
#define LINLIBERTINE_HEIGHT 23

static const uint8_t LinLibertine[] PROGMEM = {
    0x12, 0x8C, // size
    0x0A, // width
    0x17, // height
    0x20, // first char
    0x1B, // char count
    
    // char widths
    0x00, 0x02, 0x07, 0x0A, 0x0A, 0x0F, 0x10, 0x03, 
    0x06, 0x06, 0x07, 0x08, 0x03, 0x06, 0x02, 0x07, 
    0x0A, 0x07, 0x08, 0x0A, 0x0B, 0x09, 0x0A, 0x0A, 
    0x0A, 0x0A, 0x02, 
    
    // font data
    0xFE, 0xFE, 0x8F, 0x80, 0x06, 0x06, // 33
    0x1C, 0x7E, 0x1E, 0x00, 0x1E, 0x7E, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 34
    0x00, 0x80, 0x80, 0xF0, 0x8C, 0x80, 0x80, 0xF8, 0x84, 0x80, 0x10, 0x10, 0xFC, 0x13, 0x10, 0x10, 0xFC, 0x13, 0x10, 0x10, 0x00, 0x04, 0x02, 0x00, 0x00, 0x04, 0x02, 0x00, 0x00, 0x00, // 35
    0x00, 0xF0, 0xF8, 0x0C, 0x04, 0xFE, 0x04, 0x18, 0x30, 0x00, 0xE0, 0x80, 0x03, 0x03, 0xF6, 0x0F, 0x0E, 0x1C, 0xF8, 0xF0, 0x00, 0x02, 0x02, 0x04, 0x3E, 0x04, 0x04, 0x02, 0x02, 0x00, // 36
    0xE0, 0xF0, 0x38, 0x08, 0x08, 0x88, 0x70, 0x10, 0x10, 0x90, 0x50, 0x30, 0x18, 0x00, 0x00, 0x01, 0x03, 0x02, 0x82, 0xC3, 0x21, 0x18, 0x04, 0x02, 0xE1, 0xF0, 0x18, 0x08, 0x08, 0xF0, 0x00, 0x00, 0x04, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x06, 0x04, 0x04, 0x02, 0x00, // 37
    0x00, 0x00, 0x00, 0x00, 0x78, 0xFC, 0x86, 0x82, 0xC2, 0x7E, 0x1C, 0x80, 0x80, 0x80, 0x80, 0x80, 0xF0, 0xF8, 0x0C, 0x04, 0x02, 0x03, 0x03, 0x0E, 0x3C, 0xF0, 0xE0, 0x98, 0x04, 0x03, 0x00, 0x00, 0x00, 0x02, 0x02, 0x06, 0x04, 0x04, 0x04, 0x04, 0x02, 0x00, 0x00, 0x02, 0x06, 0x04, 0x04, 0x02, // 38
    0x1E, 0x7E, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 39
    0x00, 0xE0, 0x78, 0x0C, 0x02, 0x01, 0x7F, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x1E, 0x30, 0x40, 0x80, // 40
    0x01, 0x02, 0x0C, 0x78, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x7F, 0x80, 0x40, 0x30, 0x1E, 0x06, 0x00, // 41
    0x04, 0x6C, 0x78, 0x1F, 0x39, 0x6C, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 42
    0x00, 0x00, 0x00, 0x80, 0x80, 0x00, 0x00, 0x00, 0x10, 0x10, 0x10, 0xFF, 0xFF, 0x10, 0x10, 0x10, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 0x00, 0x00, // 43
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x16, 0x1C, // 44
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 45
    0x00, 0x00, 0x80, 0x80, 0x06, 0x06, // 46
    0x00, 0x00, 0x00, 0x00, 0xE0, 0x1C, 0x06, 0x00, 0xC0, 0x38, 0x07, 0x00, 0x00, 0x00, 0x0C, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, // 47
    0xC0, 0xF0, 0x38, 0x0C, 0x04, 0x04, 0x0C, 0x38, 0xF0, 0xC0, 0x3F, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x80, 0xFF, 0x3F, 0x00, 0x00, 0x02, 0x06, 0x04, 0x04, 0x06, 0x02, 0x00, 0x00, // 48
    0x10, 0x10, 0x18, 0xF8, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x04, 0x04, 0x06, 0x06, 0x04, 0x04, // 49
    0x30, 0x38, 0x24, 0x04, 0x04, 0x0C, 0xF8, 0xF0, 0x00, 0x80, 0xE0, 0x30, 0x18, 0x06, 0x03, 0xC1, 0x06, 0x06, 0x04, 0x04, 0x04, 0x04, 0x06, 0x02, // 50
    0x30, 0x38, 0x0C, 0x04, 0x04, 0x04, 0x8C, 0xF8, 0x70, 0x00, 0x00, 0x00, 0x00, 0x02, 0x03, 0x03, 0x02, 0x86, 0xFE, 0x78, 0x02, 0x06, 0x04, 0x04, 0x04, 0x04, 0x06, 0x02, 0x00, 0x00, // 51
    0x00, 0x00, 0x00, 0xC0, 0x20, 0x10, 0xF8, 0xFC, 0x00, 0x00, 0x00, 0x18, 0x16, 0x11, 0x10, 0x10, 0x10, 0xFF, 0xFF, 0x10, 0x10, 0x10, 0x00, 0x00, 0x00, 0x00, 0x04, 0x04, 0x06, 0x06, 0x04, 0x00, 0x00, // 52
    0x00, 0xF0, 0x0C, 0x84, 0x84, 0x84, 0x84, 0x06, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x01, 0x83, 0xFF, 0x7C, 0x02, 0x06, 0x04, 0x04, 0x04, 0x06, 0x02, 0x00, 0x00, // 53
    0x00, 0x80, 0xC0, 0x60, 0x10, 0x08, 0x08, 0x04, 0x00, 0x00, 0x7E, 0xFF, 0x83, 0x01, 0x01, 0x01, 0x03, 0x87, 0xFE, 0x7C, 0x00, 0x02, 0x02, 0x06, 0x04, 0x04, 0x04, 0x02, 0x02, 0x00, // 54
    0x3A, 0x0C, 0x04, 0x04, 0x04, 0x04, 0x04, 0xE4, 0x3C, 0x04, 0x00, 0x00, 0x00, 0x80, 0xF0, 0x3C, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 55
    0x00, 0x70, 0xF8, 0x8C, 0x04, 0x04, 0x8C, 0xF8, 0x70, 0x00, 0xF0, 0xF8, 0x0C, 0x05, 0x03, 0x03, 0x07, 0x0C, 0xF8, 0x70, 0x00, 0x02, 0x06, 0x04, 0x04, 0x04, 0x04, 0x02, 0x02, 0x00, // 56
    0xE0, 0xF8, 0x18, 0x04, 0x04, 0x04, 0x0C, 0x18, 0xF0, 0xE0, 0x03, 0x07, 0x0E, 0x0C, 0x08, 0x88, 0xE8, 0x7C, 0x1F, 0x07, 0x00, 0x00, 0x04, 0x02, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, // 57
    0x80, 0x80, 0xC3, 0xC3, 0x02, 0x02 // 58
    
};

#endif
